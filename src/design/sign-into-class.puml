@startuml Student_Sign_In
!theme plain
skinparam backgroundColor #FAFAFA
skinparam sequence {
    ArrowColor #1976D2
    ActorBorderColor #0D47A1
    LifeLineBorderColor #42A5F5
    LifeLineBackgroundColor #E3F2FD
    ParticipantBorderColor #1565C0
    ParticipantBackgroundColor #BBDEFB
}

title Sequence 2: Student Signs Into Class

actor Student
participant "Express\nServer" as Express
participant "Log\nRouter" as LogRouter
participant "Async\nHandler" as Async
participant "Log\nController" as LogController
participant "Log\nService" as LogService
participant "Log\nModel" as LogModel
database MongoDB

Student -> Express: POST /api/v1/logs\n{sheetId, studentId, name,\nlocation, fingerprint}
activate Express

Express -> LogRouter: Route request
activate LogRouter

LogRouter -> Async: asyncHandler(createLog)
activate Async

Async -> LogController: createLog(req, res, next)
activate LogController

LogController -> LogService: createLog(req.body)
activate LogService
note right of LogService
    Record attendance with:
    - Student info
    - Location data
    - Timestamp
    - Device fingerprint
end note

LogService -> LogModel: create(data)
activate LogModel

LogModel -> MongoDB: Insert log entry
activate MongoDB
MongoDB --> LogModel: Created log
deactivate MongoDB

LogModel --> LogService: ILog instance
deactivate LogModel

LogService --> LogController: Created log
deactivate LogService

LogController -> LogController: res.status(201)
LogController --> Express: JSON response
deactivate LogController
deactivate Async
deactivate LogRouter

Express --> Student: 201 Created\n{log confirmation}
deactivate Express

@enduml
