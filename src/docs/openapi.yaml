openapi: 3.0.0
info:
  title: Student Auth API
  version: 1.0.0
  description: API for managing student authentication and sheets.
servers:
  - url: http://localhost:3000/api/v1
    description: Local dev server

paths:
  /sheets:
    get:
      summary: Retrieve all sheets
      tags:
        - Sheets
      parameters:
        - name: professorId
          in: query
          description: Only return sheets for this professor
          required: false
          schema:
            type: string
        - name: sheetId
          in: query
          description: Only return sheets with this sheet identifier
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A JSON array of Attendance Sheet(s) objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Sheet"

    post:
      summary: Create an attendance sheet
      tags:
        - Sheets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Sheet"
      responses:
        "201":
          description: Attendance sheet created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sheet"

  /sheets/{id}:
    put:
      summary: Update an attendance sheet by ID
      tags:
        - Sheets
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the sheet to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SheetUpdate"
      responses:
        "200":
          description: Updated attendance sheet object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sheet"
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Sheet not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete an attendance sheet by ID
      tags:
        - Sheets
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the sheet to delete
          schema:
            type: string
      responses:
        "204":
          description: Sheet deleted successfully
        "404":
          description: Sheet not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /sheets/{professorId}/{sheetId}:
    get:
      summary: Get a sheet by professorId and sheetId
      tags:
        - Sheets
      parameters:
        - name: professorId
          in: path
          required: true
          description: The professor's ID (createdBy)
          schema:
            type: string
        - name: sheetId
          in: path
          required: true
          description: The sheet's MongoDB _id
          schema:
            type: string
      responses:
        "200":
          description: Sheet found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sheet"
        "404":
          description: Sheet not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /logs:
    get:
      summary: Retrieve all logs
      tags:
        - Logs
      responses:
        '200':
          description: A list of logs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
    post:
      summary: Create a new log entry
      tags:
        - Logs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Log'
      responses:
        '201':
          description: Log created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'

components:
  schemas:
    Sheet:
      type: object
      required:
        - professorId
        - professorFirstName
        - professorLastName
        - sheetId
        - className
        - dateCreated
        - secretKey
        - isActive
      properties:
        professorId:
          type: string
          description: Mongo-generated identifier
        professorFirstName:
          type: string
          description: First name of the professor
        professorLastName:
          type: string
          description: Last name of the professor
        sheetId:
          type: string
          description: The sign-in sheet identifier
        className:
          type: string
          description: The name of the class
        dateCreated:
          type: string
          format: date-time
          description: Creation timestamp
        secretKey:
          type: object
          required:
            - secret
          properties:
            secret:
              type: string
              description: Your secret string
            location:
              type: object
              properties:
                lat:
                  type: number
                  description: Latitude coordinate
                lon:
                  type: number
                  description: Longitude coordinate
        isActive:
          type: boolean

    SheetUpdate:
      type: object
      description: Fields to update on an existing sheet (all optional)
      properties:
        professorId:
          type: string
        professorFirstName:
          type: string
        professorLastName:
          type: string
        sheetId:
          type: string
        className:
          type: string
        dateCreated:
          type: string
          format: date-time
        secretKey:
          type: object
          properties:
            secret:
              type: string
            location:
              type: object
              properties:
                lat:
                  type: number
                lon:
                  type: number
        isActive:
          type: boolean

    Error:
      type: object
      properties:
        error:
          type: string
      required:
        - error

    Log:
      type: object
      properties:
        _id:
          type: string
        message:
          type: string
        level:
          type: string
        timestamp:
          type: string
          format: date-time
